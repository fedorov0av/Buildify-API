"""Initial tables

Revision ID: 708a8364f19f
Revises: 
Create Date: 2025-01-15 19:47:14.556929

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm, select
from app.db.models import Organization, Activity, Building, Phone, organization_activity
from app.setup.test_data import TEST_DATA

# revision identifiers, used by Alembic.
revision: str = '708a8364f19f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['activity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('building',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_name', sa.String(length=300), nullable=False),
    sa.Column('organization_building_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_building_id'], ['building.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization_activities',
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], )
    )
    op.create_table('phone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=300), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    
    for building in TEST_DATA['buildings']:
        building_id = building['id']
        building_address = building['address']
        building_coordinates = building['coordinates']
        building_bd = Building(
                                id=building_id,
                                address=building_address,
                                latitude=building_coordinates[0],
                                longitude=building_coordinates[1]
                               )
        session.add(building_bd)
        session.commit()
    
    for activity in TEST_DATA['activities']:
        activity_id = activity['id']
        activity_name = activity['name']
        activity_subcategories: list[dict] = activity['subcategories']
        activity_bd = Activity(id=activity_id, name=activity_name)
        session.add(activity_bd)
        for activity_subcategory in activity_subcategories:
            child_activity_subcategory_bd = Activity(
                                                    id=activity_subcategory["id"],
                                                    name=activity_subcategory["name"],
                                                    parent_id=activity_bd.id
                                                    )
            session.add(child_activity_subcategory_bd)
        session.commit()

    for organization in TEST_DATA['organizations']:
        organization_id = organization['id']
        organization_name = organization['name']
        organization_ph_numbers = organization['phone_numbers']
        organization_building_id = organization['building_id']
        organization_activity_ids = organization['activity_ids']
        organization_bd = Organization(
                                        id=organization_id,
                                        organization_name=organization_name,
                                        organization_building_id=organization_building_id
                                        )
        for activity_id in organization_activity_ids:
            query = select(Activity).where(Activity.id==activity_id)
            activity_bd = session.scalars(query).one()
            organization_bd.organization_activities.append(activity_bd)
        for organization_ph_number in organization_ph_numbers:
            ph_number_bd = Phone(number=organization_ph_number, organization_id=organization_bd.id)
            session.add(ph_number_bd)
        session.add(organization_bd)
        session.commit()

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('phone')
    op.drop_table('organization_activities')
    op.drop_table('organization')
    op.drop_table('building')
    op.drop_table('activity')
    # ### end Alembic commands ###
